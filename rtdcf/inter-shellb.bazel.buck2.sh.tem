function do_setup() {
	LOG_MODE=1
	BUILD_SYS=@BUILD_SYS@
	BUILD_PLATFORM=c_cpp
}
function do_start() {
	set_out "."
	finc_cpp_compiler "Please install a c++ compiler to proceed"
	cpp_flags "@CPPFLAGS@"
	l_flags "@LFLAGS@"
	add_lib_path "/usr/local/opt/openssl/lib" "/usr/local/lib"
	add_inc_path "/usr/local/opt/openssl/include" "/usr/local/include" "/usr/include/libmongoc-1.0"
	add_inc_path "/usr/include/libbson-1.0" "/usr/local/include/libmongoc-1.0" "/usr/local/include/libbson-1.0"
	add_inc_path "/usr/include/postgresql" "/usr/include/pgsql" "/usr/local/include/postgresql" "/usr/local/include/pgsql"
	tmp_="@LIBS@"
	for tl_ in ${tmp_// / }
	do
		add_lib "$tl_"
	done
	cwdir="../"
	if [ "$BUILD_SYS" = "bazel" ]; then
		cwdir=`pwd`
		cwdir=${cwdir//rtdcf/}
	fi
	add_inc_path "${cwdir}include"
	add_lib_path "${cwdir}lib"
	for wedbdir in ../web/*
	do
		wedbdir=${wedbdir%*/}
		wedbdir="${wedbdir##*/}"
		minc_="../web/$wedbdir/include"
		if [ "$BUILD_SYS" = "bazel" ]; then
			minc_="${cwdir}web/${wedbdir}/include"
		fi
		add_inc_path "$minc_"
		if [ -f "../lib/lib${wedbdir}.${SHLIB_EXT}" ]; then
			add_lib "${wedbdir}"
		fi
	done
	add_lib "ffead-framework" "ffead-modules"

	set_src_files "ReflectorInterface.cpp,SerializeInterface.cpp,AjaxInterface.cpp,WsInterface.cpp" "shared:inter"
	set_src_files "DCPInterface.cpp,TemplateInterface.cpp" "shared:dinter"
	trigger_build "inter,dinter"
}
function do_install() {
	mv ".bin/libinter.${SHLIB_EXT}" ".bin/libdinter.${SHLIB_EXT}" ../lib/
}